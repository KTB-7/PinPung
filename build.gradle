plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ktb7'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

	implementation 'io.github.cdimascio:java-dotenv:5.2.2'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// mysql
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'com.mysql:mysql-connector-j'

//	 for login html
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// aws sdk v2
	implementation(platform("software.amazon.awssdk:bom:2.27.21"))
	implementation 'software.amazon.awssdk:s3'

	// spring-cloud-aws
//	implementation 'io.awspring.cloud:spring-cloud-aws-s3:3.0.2'

	//Webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// OAuth2 클라이언트
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// for health check
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// openAI
	implementation 'com.openai:openai:2.1.1'
}

tasks.named('test') {
	useJUnitPlatform()
}
